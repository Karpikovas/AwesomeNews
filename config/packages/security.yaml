#config/packages/security.yaml
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_SUPER_ADMIN:   ROLE_ADMIN

    providers:
        chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]
        in_memory:
            memory:
                users:
                    superadmin:
                        password: 'superadminpw'
                        roles: ['ROLE_SUPER_ADMIN']
        fos_userbundle:
            id: fos_user.user_provider.username

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern: ^/api/auth/login
            stateless: true
            anonymous: true
            json_login:
                provider: chain_provider
                check_path: /api/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            provider: chain_provider

        api_register:
            pattern:  ^/api/auth/register
            stateless: true
            anonymous: true
        api_doc:
            pattern: ^/api/doc
            stateless: true
            anonymous: true
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            provider: chain_provider
#            lexik_jwt:
#              authorization_header: # check token in Authorization Header
#                enabled: true
#                prefix:  Bearer
#              throw_exceptions:        true     # When an authentication failure occurs, return a 401 response immediately
#              create_entry_point:      true      # When no authentication details are provided, create a default entry point that returns a 401 response

            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            pattern: ^/
            form_login:
                provider: chain_provider
                csrf_token_generator: security.csrf.token_manager
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                always_use_default_target_path: false
                default_target_path: admin_admin_index

            logout:
                path:   fos_user_security_logout
                target: fos_user_security_login
            anonymous:    true




#security:
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    encoders:
#        FOS\UserBundle\Model\UserInterface: sha512
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: ROLE_ADMIN
#
#    providers:
##        in_memory: { memory: ~ }
#        fos_userbundle:
#            id: fos_user.user_provider.username
#    firewalls:
#        oauth_token:                                   # Разрешаем доступ для получения токена
#            pattern: ^/oauth/v2/token
#            security: false
#        oauth_authorize:
#            pattern:    ^/oauth/v2/auth
#            form_login:
#                provider: fos_userbundle
#                check_path: /oauth/v2/auth_login_check
#                login_path: /oauth/v2/auth_login
#                use_referer: true
#        api:
#            pattern: ^/                                # Для всех других страниц
#            fos_oauth: true                            # включаем OAuth2
#            stateless: true                            # Не использовать куки
#            anonymous: false                           # Анонимный доступ запрещён
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            pattern: ^/
#            form_login:
#                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager
#            anonymous: true
#
#            # activate different ways to authenticate
#
#            # http_basic: true
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#
#            # form_login: true
#            # https://symfony.com/doc/current/security/form_login_setup.html
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#
#    access_control:
#        # - { path: ^/admin, roles: ROLE_ADMIN }
#        # - { path: ^/profile, roles: ROLE_USER }
#        - { path: ^/api, roles: [ IS_AUTHENTICATED_FULLY ] }
#        - { path: ^/createClient, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }


